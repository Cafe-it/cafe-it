/* tslint:disable */
/* eslint-disable */
/**
 * Cafeit Client API
 * Real-time cafe seat availability platform API for client applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OperatingHours } from './OperatingHours';
import {
    OperatingHoursFromJSON,
    OperatingHoursFromJSONTyped,
    OperatingHoursToJSON,
    OperatingHoursToJSONTyped,
} from './OperatingHours';
import type { StoreLinks } from './StoreLinks';
import {
    StoreLinksFromJSON,
    StoreLinksFromJSONTyped,
    StoreLinksToJSON,
    StoreLinksToJSONTyped,
} from './StoreLinks';
import type { Location } from './Location';
import {
    LocationFromJSON,
    LocationFromJSONTyped,
    LocationToJSON,
    LocationToJSONTyped,
} from './Location';

/**
 * 
 * @export
 * @interface StoreInformation
 */
export interface StoreInformation {
    /**
     * Name of the cafe
     * @type {string}
     * @memberof StoreInformation
     */
    name: string;
    /**
     * Physical address of the cafe
     * @type {string}
     * @memberof StoreInformation
     */
    address: string;
    /**
     * 
     * @type {Location}
     * @memberof StoreInformation
     */
    location: Location;
    /**
     * 
     * @type {OperatingHours}
     * @memberof StoreInformation
     */
    hours: OperatingHours;
    /**
     * 
     * @type {StoreLinks}
     * @memberof StoreInformation
     */
    links: StoreLinks;
}

/**
 * Check if a given object implements the StoreInformation interface.
 */
export function instanceOfStoreInformation(value: object): value is StoreInformation {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('location' in value) || value['location'] === undefined) return false;
    if (!('hours' in value) || value['hours'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    return true;
}

export function StoreInformationFromJSON(json: any): StoreInformation {
    return StoreInformationFromJSONTyped(json, false);
}

export function StoreInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreInformation {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'address': json['address'],
        'location': LocationFromJSON(json['location']),
        'hours': OperatingHoursFromJSON(json['hours']),
        'links': StoreLinksFromJSON(json['links']),
    };
}

export function StoreInformationToJSON(json: any): StoreInformation {
    return StoreInformationToJSONTyped(json, false);
}

export function StoreInformationToJSONTyped(value?: StoreInformation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'address': value['address'],
        'location': LocationToJSON(value['location']),
        'hours': OperatingHoursToJSON(value['hours']),
        'links': StoreLinksToJSON(value['links']),
    };
}

