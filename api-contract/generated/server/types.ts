/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/cafes": {
    /**
     * Get nearby cafes
     * @description Retrieve list of nearby cafes based on user location
     */
    get: operations["getNearbyCafes"];
  };
  "/cafes/{cafeId}": {
    /**
     * Get cafe details
     * @description Get detailed information about a specific cafe
     */
    get: operations["getCafeById"];
  };
  "/cafes/{cafeId}/seats-availability": {
    /**
     * Get cafe seat availability
     * @description Get the current seat availability for a cafe
     */
    get: operations["getCafeSeatsById"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Error: {
      /** @description Error code */
      code: string;
      /** @description Error message */
      message: string;
      /** @description Additional error details */
      details?: Record<string, never>;
    };
    Cafe: {
      id: string;
      seatAvailability: components["schemas"]["SeatAvailability"];
      storeInformation?: components["schemas"]["StoreInformation"];
      location?: components["schemas"]["Location"];
      amenities?: components["schemas"]["Amenities"];
    };
    SeatAvailability: {
      /** @description Total number of seats in the cafe */
      totalSeats: number;
      /** @description Number of currently available seats */
      availableSeats: number;
      /**
       * Format: date-time
       * @description Last time seat status was updated
       */
      lastUpdated: string;
    };
    StoreInformation: {
      /** @description Name of the cafe */
      name: string;
      /** @description Physical address of the cafe */
      address: string;
      location: components["schemas"]["Location"];
      hours: components["schemas"]["OperatingHours"];
      links: components["schemas"]["StoreLinks"];
    };
    Location: {
      /** @description Latitude coordinate */
      lat: number;
      /** @description Longitude coordinate */
      lng: number;
    };
    OperatingHours: {
      /**
       * Format: time
       * @description Opening time (HH:MM format)
       * @example 07:00
       */
      startTime: string;
      /**
       * Format: time
       * @description Closing time (HH:MM format)
       * @example 18:00
       */
      endTime: string;
    };
    StoreLinks: {
      /**
       * Format: uri
       * @description URL to the cafe's location on map services
       * @example https://maps.google.com/?q=123+Main+St
       */
      mapUrl: string;
    };
    Amenities: {
      hasWifi?: boolean;
      hasOutlets?: boolean;
      /** @enum {string} */
      noiseLevel?: "quiet" | "moderate" | "loud";
    };
  };
  responses: {
    /** @description Bad request */
    BadRequest: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
    /** @description Cafe not found */
    NotFound: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
    /** @description Internal server error */
    InternalServerError: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
  };
  parameters: {
    CafeId: string;
    /** @description User's current location */
    Location?: components["schemas"]["Location"];
    /** @description Search radius in kilometers */
    Radius?: number;
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Get nearby cafes
   * @description Retrieve list of nearby cafes based on user location
   */
  getNearbyCafes: {
    parameters: {
      query?: {
        location?: components["parameters"]["Location"];
        radius?: components["parameters"]["Radius"];
      };
    };
    responses: {
      /** @description List of nearby cafes */
      200: {
        content: {
          "application/json": components["schemas"]["Cafe"][];
        };
      };
      400: components["responses"]["BadRequest"];
      404: components["responses"]["NotFound"];
      500: components["responses"]["InternalServerError"];
    };
  };
  /**
   * Get cafe details
   * @description Get detailed information about a specific cafe
   */
  getCafeById: {
    parameters: {
      path: {
        cafeId: components["parameters"]["CafeId"];
      };
    };
    responses: {
      /** @description Cafe details */
      200: {
        content: {
          "application/json": components["schemas"]["Cafe"];
        };
      };
      400: components["responses"]["BadRequest"];
      404: components["responses"]["NotFound"];
      500: components["responses"]["InternalServerError"];
    };
  };
  /**
   * Get cafe seat availability
   * @description Get the current seat availability for a cafe
   */
  getCafeSeatsById: {
    parameters: {
      path: {
        cafeId: components["parameters"]["CafeId"];
      };
    };
    responses: {
      /** @description Seat availability */
      200: {
        content: {
          "application/json": components["schemas"]["SeatAvailability"];
        };
      };
      400: components["responses"]["BadRequest"];
      404: components["responses"]["NotFound"];
      500: components["responses"]["InternalServerError"];
    };
  };
}
