/* tslint:disable */
/* eslint-disable */
/**
 * Cafeit Client API
 * Real-time cafe seat availability platform API for client applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StoreInformation } from './StoreInformation';
import {
    StoreInformationFromJSON,
    StoreInformationFromJSONTyped,
    StoreInformationToJSON,
    StoreInformationToJSONTyped,
} from './StoreInformation';
import type { Amenities } from './Amenities';
import {
    AmenitiesFromJSON,
    AmenitiesFromJSONTyped,
    AmenitiesToJSON,
    AmenitiesToJSONTyped,
} from './Amenities';
import type { Location } from './Location';
import {
    LocationFromJSON,
    LocationFromJSONTyped,
    LocationToJSON,
    LocationToJSONTyped,
} from './Location';
import type { SeatAvailability } from './SeatAvailability';
import {
    SeatAvailabilityFromJSON,
    SeatAvailabilityFromJSONTyped,
    SeatAvailabilityToJSON,
    SeatAvailabilityToJSONTyped,
} from './SeatAvailability';

/**
 * 
 * @export
 * @interface Cafe
 */
export interface Cafe {
    /**
     * 
     * @type {string}
     * @memberof Cafe
     */
    id: string;
    /**
     * 
     * @type {SeatAvailability}
     * @memberof Cafe
     */
    seatAvailability: SeatAvailability;
    /**
     * 
     * @type {StoreInformation}
     * @memberof Cafe
     */
    storeInformation?: StoreInformation;
    /**
     * 
     * @type {Location}
     * @memberof Cafe
     */
    location?: Location;
    /**
     * 
     * @type {Amenities}
     * @memberof Cafe
     */
    amenities?: Amenities;
}

/**
 * Check if a given object implements the Cafe interface.
 */
export function instanceOfCafe(value: object): value is Cafe {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('seatAvailability' in value) || value['seatAvailability'] === undefined) return false;
    return true;
}

export function CafeFromJSON(json: any): Cafe {
    return CafeFromJSONTyped(json, false);
}

export function CafeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Cafe {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'seatAvailability': SeatAvailabilityFromJSON(json['seatAvailability']),
        'storeInformation': json['storeInformation'] == null ? undefined : StoreInformationFromJSON(json['storeInformation']),
        'location': json['location'] == null ? undefined : LocationFromJSON(json['location']),
        'amenities': json['amenities'] == null ? undefined : AmenitiesFromJSON(json['amenities']),
    };
}

export function CafeToJSON(json: any): Cafe {
    return CafeToJSONTyped(json, false);
}

export function CafeToJSONTyped(value?: Cafe | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'seatAvailability': SeatAvailabilityToJSON(value['seatAvailability']),
        'storeInformation': StoreInformationToJSON(value['storeInformation']),
        'location': LocationToJSON(value['location']),
        'amenities': AmenitiesToJSON(value['amenities']),
    };
}

